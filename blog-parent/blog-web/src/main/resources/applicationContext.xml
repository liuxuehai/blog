<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-4.0.xsd
     http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.0.xsd">

	<bean id="messageSource" class="org.springframework.context.support.ReloadableResourceBundleMessageSource">
		<property name="basenames">
			<list>
				<value>classpath:i18n/error</value>
				<value>classpath:i18n/message</value>
			</list>
		</property>
		<property name="defaultEncoding" value="UTF-8"></property>
		<property name="useCodeAsDefaultMessage" value="true"></property>
	</bean>

	<context:property-placeholder location="classpath:properties/*.properties" />

	<bean id="taskExecutor" name="taskExecutor" class="org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor">
		<!-- 核心线程数，默认为1 -->
		<property name="corePoolSize" value="10" />
		<!-- 最大线程数，默认为Integer.MAX_VALUE -->
		<property name="maxPoolSize" value="50" />
		<!-- 队列最大长度，一般需要设置值>=notifyScheduledMainExecutor.maxNum；默认为Integer.MAX_VALUE <property name="queueCapacity" value="1000" /> -->
		<!-- 线程池维护线程所允许的空闲时间，默认为60s -->
		<property name="keepAliveSeconds" value="300" />
		<!-- 线程池对拒绝任务（无线程可用）的处理策略，目前只支持AbortPolicy、CallerRunsPolicy；默认为后者 -->
		<property name="rejectedExecutionHandler">
			<!-- AbortPolicy:直接抛出java.util.concurrent.RejectedExecutionException异常 -->
			<!-- CallerRunsPolicy:主线程直接执行该任务，执行完之后尝试添加下一个任务到线程池中，可以有效降低向线程池内添加任务的速度 -->
			<!-- DiscardOldestPolicy:抛弃旧的任务、暂不支持；会导致被丢弃的任务无法再次被执行 -->
			<!-- DiscardPolicy:抛弃当前任务、暂不支持；会导致被丢弃的任务无法再次被执行 -->
			<bean class="java.util.concurrent.ThreadPoolExecutor$CallerRunsPolicy" />
		</property>
	</bean>

	<!-- <bean id="shopService" class="org.springframework.remoting.caucho.HessianProxyFactoryBean">
		<property name="serviceUrl">
			<value>${server_url}/shopService</value>
		</property>
		<property name="serviceInterface">
			<value>com.summer.taobao.service.ShopService</value>
		</property>
	</bean>
	<bean id="itemService" class="org.springframework.remoting.caucho.HessianProxyFactoryBean">
		<property name="serviceUrl">
			<value>${server_url}/itemService</value>
		</property>
		<property name="serviceInterface">
			<value>com.summer.taobao.service.ItemService</value>
		</property>
	</bean>

	<bean id="sellerService" class="org.springframework.remoting.caucho.HessianProxyFactoryBean">
		<property name="serviceUrl">
			<value>${server_url}/sellerService</value>
		</property>
		<property name="serviceInterface">
			<value>com.summer.taobao.service.SellerService</value>
		</property>
	</bean>

	<bean id="spiderService" class="org.springframework.remoting.caucho.HessianProxyFactoryBean">
		<property name="serviceUrl">
			<value>${server_url}/spiderService</value>
		</property>
		<property name="serviceInterface">
			<value>com.summer.taobao.service.SpiderService</value>
		</property>
	</bean>

	<bean id="itemAttributeService" class="org.springframework.remoting.caucho.HessianProxyFactoryBean">
		<property name="serviceUrl">
			<value>${server_url}/itemAttributeService</value>
		</property>
		<property name="serviceInterface">
			<value>com.summer.taobao.service.ItemAttributeService</value>
		</property>
	</bean>

	<bean id="itemTradeService" class="org.springframework.remoting.caucho.HessianProxyFactoryBean">
		<property name="serviceUrl">
			<value>${server_url}/itemTradeService</value>
		</property>
		<property name="serviceInterface">
			<value>com.summer.taobao.service.ItemTradeService</value>
		</property>
	</bean>

	<bean id="itemRateService" class="org.springframework.remoting.caucho.HessianProxyFactoryBean">
		<property name="serviceUrl">
			<value>${server_url}/itemRateService</value>
		</property>
		<property name="serviceInterface">
			<value>com.summer.taobao.service.ItemRateService</value>
		</property>
	</bean>

	<bean id="spiderLogService" class="org.springframework.remoting.caucho.HessianProxyFactoryBean">
		<property name="serviceUrl">
			<value>${server_url}/spiderLogService</value>
		</property>
		<property name="serviceInterface">
			<value>com.summer.taobao.service.SpiderLogService</value>
		</property>
	</bean> -->


	<context:component-scan base-package="com.summer.blog">
		<context:exclude-filter type="annotation" expression="org.springframework.stereotype.Controller"></context:exclude-filter>
	</context:component-scan>

</beans>